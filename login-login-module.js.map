{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-content padding color=\\\"primary\\\">\\r\\n\\r\\n  <ion-card color=\\\"light\\\" class=\\\"login-content\\\">\\r\\n\\r\\n    <ion-card-content>\\r\\n      <img class=\\\"img-logo\\\" src=\\\"assets/logo-square.png\\\" alt=\\\"\\\">\\r\\n\\r\\n      <div padding>\\r\\n\\r\\n        <ion-text color=\\\"dark\\\">\\r\\n          <h3>\\r\\n            Login to your account\\r\\n          </h3>\\r\\n        </ion-text>\\r\\n  \\r\\n        <ion-text color=\\\"medium\\\">\\r\\n          <p>Enter Username</p>\\r\\n        </ion-text>\\r\\n      </div>\\r\\n\\r\\n      <ion-icon name=\\\"ionic\\\" color=\\\"medium\\\"></ion-icon>\\r\\n\\r\\n      <ion-input type=\\\"email\\\" class=\\\"input-email\\\" [(ngModel)]=\\\"user.email\\\" placeholder=\\\"Email\\\" (keypress)=\\\"eventHandler($event)\\\"></ion-input>\\r\\n\\r\\n      <ion-text padding color=\\\"primary\\\" routerLink=\\\"/forgot-password\\\">\\r\\n        <p>Forgot Password?</p>\\r\\n      </ion-text>\\r\\n\\r\\n      <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" [disabled]=\\\"!user.email\\\" (click)=\\\"checkEmail()\\\">\\r\\n        Next Â»\\r\\n      </ion-button>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\"","module.exports = \".login-content {\\n  margin-top: 18vh;\\n  text-align: center; }\\n  .login-content img {\\n    margin: 0 auto;\\n    width: 150px !important;\\n    height: 150px !important; }\\n  .login-content .input-email {\\n    text-align: left;\\n    border: 1px solid #ccc;\\n    padding: 5px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXFdvcmtcXFBhdWxcXEN1cmFNb2JpbGVBenVyZVxcQ3VyYWNhbGwtbW9iaWxlLWFwcC9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTtFQUZ0QjtJQUlRLGNBQWM7SUFDZCx1QkFBdUI7SUFDdkIsd0JBQXdCLEVBQUE7RUFOaEM7SUFVUSxnQkFBZ0I7SUFDaEIsc0JBQXNCO0lBQ3RCLHVCQUF1QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRlbnR7XHJcbiAgICBtYXJnaW4tdG9wOiAxOHZoO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaW1ne1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIHdpZHRoOiAxNTBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGhlaWdodDogMTUwcHggIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAuaW5wdXQtZW1haWx7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICAgIHBhZGRpbmc6IDVweCAhaW1wb3J0YW50O1xyXG5cclxuICAgIH1cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController, Platform } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\n// import { Push, PushObject, PushOptions } from '@ionic-native/push/ngx';\nimport { CommonService } from '../services/common.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  user: any = {\n    email:<string>null\n  };\n  loading: any = null;\n\n  constructor(\n    public plt: Platform,\n    // private push: Push,\n    private commonService: CommonService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    public toastController: ToastController,\n    public loadingController: LoadingController\n  ) { }\n\n  ngOnInit() {\n    if (this.userService.getUserId()) {\n      this.router.navigate(['/tabs/tab1'], { replaceUrl: true });\n    }\n\n    // this.checkPushPermission();\n    // this.createPushChannel();\n    // this.returnChannels();\n    // this.initPush();\n  }\n\n  // checkPushPermission() {\n  //   // to check if we have permission\n  // this.push.hasPermission()\n  //   .then((res: any) => {\n  //     if (res.isEnabled) {\n  //       this.commonService.presentAlert('We have permission to send push notifications', 'w', () => {});\n  //     } else {\n  //       this.commonService.presentAlert('We do not have permission to send push notifications', 'nn', () => {});\n  //     }\n  //   });\n  // }\n\n  // createPushChannel() {\n  //   // Create a channel (Android O and above). You'll need to provide the id, description and importance properties.\n  //   this.push.createChannel({\n  //     id: \"testchannel1\",\n  //     description: \"My first test channel\",\n  //     // The importance property goes from 1 = Lowest, 2 = Low, 3 = Normal, 4 = High and 5 = Highest.\n  //     importance: 3\n  //   }).then(() => {\n  //     this.commonService.presentAlert('Channel created', 'nn', () => {});\n  //     console.log('Channel created')});\n \n  // }\n\n  // returnChannels() {\n  //   // Return a list of currently configured channels\n  //   this.push.listChannels().then((channels) => {\n  //     this.commonService.presentAlert(JSON.stringify(channels), 'List of channels', () => {});\n\n  //     console.log('List of channels', channels);\n  //   });\n  // }\n\n  // initPush() {\n  //   // to initialize push notifications\n  //   const options: PushOptions = {\n  //     android: {},\n  //     ios: {\n  //         alert: 'true',\n  //         badge: true,\n  //         sound: 'false'\n  //     },\n  //     windows: {},\n  //     browser: {\n  //         pushServiceURL: 'http://push.api.phonegap.com/v1/push'\n  //     }\n  //   }\n\n  //   const pushObject: PushObject = this.push.init(options);\n\n\n  //   pushObject.on('notification').subscribe((notification: any) => {\n  //     this.commonService.presentAlert(JSON.stringify(notification), 'Received a notification', () => {});\n\n  //     console.log('Received a notification', notification);\n  //   });\n\n  //   pushObject.on('registration').subscribe((registration: any) => {\n  //     this.commonService.presentAlert(JSON.stringify(registration), 'Device registered', () => {});\n  //     console.log('Device registered', registration)});\n\n  //   pushObject.on('error').subscribe(error => {\n  //     this.commonService.presentAlert(JSON.stringify(error), 'Error with Push plugin', () => {});\n\n  //     console.error('Error with Push plugin', error)});\n\n  // }\n\n  eventHandler(event: any) {\n    if (event.keyCode === 13 && this.user.email) {\n      this.checkEmail();\n    }\n  }\n\n  async presentLoading() {\n    this.loading = await this.loadingController.create({\n      message: 'Loading',\n      // duration: 2000,\n      showBackdrop: true,\n      // spinner: 'circles'\n    });\n    await this.loading.present();\n  }\n  async presentToastWithOptions(message: string) {\n    const toast = await this.toastController.create({\n      message: message || 'Your settings have been saved.',\n      showCloseButton: true,\n      position: 'top',\n      duration: 2000,\n      closeButtonText: 'Close'\n    });\n    toast.present();\n  }\n\n  checkEmail() {\n    this.presentLoading();\n    this.userService.checkEmail(this.user)\n    .subscribe((res: any) => {\n      this.loading.dismiss();\n      if (!res.count) {\n        this.presentToastWithOptions('No matching email found.');\n      } else {\n        this.router.navigate(['/password', res])\n      }\n    });\n  }\n}\n"],"sourceRoot":""}