{"version":3,"sources":["webpack:///./src/app/settings/security/security.module.ts","webpack:///./src/app/settings/security/security.page.html","webpack:///./src/app/settings/security/security.page.scss","webpack:///./src/app/settings/security/security.page.ts"],"names":[],"mappings":"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","file":"settings-security-security-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SecurityPage } from './security.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SecurityPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SecurityPage]\n})\nexport class SecurityPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title>\\n      <img alt=\\\"logo\\\" height=\\\"40\\\" src=\\\"assets/logo.png\\\">\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"pin && pinShow || (pw.current && pw.new && pw.new2) || (newPin.new && newPin.new2)\\\">\\n      <ion-button (click)=\\\"saveChanges()\\\">\\n        <ion-icon name=\\\"save\\\"></ion-icon> Save\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Security and Login</ion-label>\\n    </ion-list-header>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Current Password</ion-label>\\n      <ion-input type=\\\"password\\\" [(ngModel)]=\\\"pw.current\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">New Password</ion-label>\\n      <ion-input type=\\\"password\\\" (change)=\\\"checkNewPass()\\\" [(ngModel)]=\\\"pw.new\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n      <ion-input type=\\\"password\\\" (change)=\\\"checkNewPass()\\\" [(ngModel)]=\\\"pw.new2\\\"></ion-input>\\n    </ion-item>\\n\\n  </ion-list>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Auto Logoff</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-segment [(ngModel)]=\\\"pw.logoff_time\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\n        <ion-segment-button value=\\\"15\\\">\\n          <ion-label>15 min</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"1\\\">\\n          <ion-label>1 hr</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"24\\\">\\n          <ion-label>24 hrs</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"pinShow\\\">\\n      <ion-label position=\\\"fixed\\\">4 Digit Pin</ion-label>\\n      <ion-input type=\\\"password\\\" [(ngModel)]=\\\"pin\\\" maxlength=\\\"4\\\" placeholder=\\\"****\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-button fill=\\\"clear\\\" strong=\\\"true\\\" expand=\\\"block\\\" size=\\\"small\\\" *ngIf=\\\"!isForgotPin\\\" color=\\\"primary\\\" (click)=\\\"isForgotPin = !isForgotPin\\\">\\n      Forgot Your Pin ?\\n    </ion-button>\\n  </ion-list>\\n\\n  <ion-list *ngIf=\\\"isForgotPin\\\">\\n    <ion-list-header>\\n      <ion-label>Reset Pin</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">New 4 Digit Pin</ion-label>\\n      <ion-input type=\\\"password\\\" placeholder=\\\"****\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"newPin.new\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Repeat New 4 Digit Pin</ion-label>\\n      <ion-input type=\\\"password\\\" placeholder=\\\"****\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"newPin.new2\\\"></ion-input>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NlY3VyaXR5L3NlY3VyaXR5LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { parseWebDriverCommand } from 'blocking-proxy/built/lib/webdriver_commands';\nimport { ToastController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { CommonService } from 'src/app/services/common.service';\n\n@Component({\n  selector: 'app-security',\n  templateUrl: './security.page.html',\n  styleUrls: ['./security.page.scss'],\n})\nexport class SecurityPage implements OnInit {\n  isForgotPin: boolean = false;\n  pinShow: boolean = false;\n  pin: string = '';\n  userInfo: any = {};\n  pw: any = {\n    current: '',\n    new: '',\n    new2: '',\n    logoff_time: '',\n    mobile_pin: '',\n    id: this.userService.getUserId()\n  };\n  newPin: any = {\n    new: '',\n    new2: ''\n  };\n  pwMatch:boolean = false;\n  constructor(\n    public commonService: CommonService,\n    public userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n\n  ) { }\n\n  ngOnInit() {\n    this.userInfo = this.userService.getUserInfo();\n    console.log(this.userInfo, 'this.userInfo');\n    this.pw.logoff_time = `${this.userInfo.logoff_time}`;\n  }\n\n  ionViewWillEnter() {\n    this.userInfo = this.userService.getUserInfo();\n  }\n\n  checkNewPass() {\n    this.pwMatch = this.pw.new === this.pw.new2;\n  }\n\n  segmentChanged($e: any) {\n    console.log($e, '$e');\n    this.pw.logoff_time = $e.detail.value;\n    this.pinShow = true;\n  }\n\n  saveChanges() {\n    console.log(this.userService.getUserInfo()['mobile_pin'], parseInt(this.pin, 10));\n    if (this.newPin.new && this.newPin.new2) {\n      if (this.newPin.new !== this.newPin.new2) {\n        this.commonService.presentToastWithOptions('Your new pin and confirm pin did not match.');\n      } else {\n        this.commonService.presentLoading();\n        this.userService.updatePin({mobile_pin: this.newPin.new, id: this.userInfo.id })\n          .subscribe((res: any) => {\n            this.commonService.loadingBox.dismiss();\n            this.userService.setUserToLocal(res);\n            this.router.navigate(['/tabs/tab4'], { replaceUrl: true });\n            this.commonService.presentToastWithOptions('Pin successfully updated.');\n          });\n      }\n    }\n    else if (!this.pwMatch && this.pw.current) {\n      this.commonService.presentToastWithOptions('New password and confirm password did not match.');\n    } else if (this.userService.getUserInfo()['mobile_pin'] !== parseInt(this.pin, 10)) {\n      this.commonService.presentToastWithOptions('Your pin is incorrect.');\n    } else {\n      this.pw.mobile_pin = this.pin;\n      this.userService.updatePassword(this.pw)\n      .subscribe((res) => {\n        if (this.pw.current && this.pin) {\n          this.commonService.presentToastWithOptions('Password and log off time Saved.');\n        } \n        else if (this.pw.current) {\n          this.commonService.presentToastWithOptions('Password Saved.');\n        } else {\n          this.commonService.presentToastWithOptions('Log time off Saved.');\n        }\n        this.userService.setUserToLocal(res);\n        this.router.navigate(['/tabs/tab4'], { replaceUrl: true });\n      });\n    }\n  }\n\n}\n"],"sourceRoot":""}