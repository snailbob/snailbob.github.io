{"version":3,"sources":["webpack:///./src/app/cases/details/details.module.ts","webpack:///./src/app/cases/details/details.page.html","webpack:///./src/app/cases/details/details.page.scss","webpack:///./src/app/cases/details/details.page.ts"],"names":[],"mappings":"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","file":"cases-details-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\nimport { DetailsPage } from './details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    IonicSelectableModule\n  ],\n  declarations: [DetailsPage]\n})\nexport class DetailsPageModule {}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button color=\\\"primary\\\" *ngIf=\\\"(caseStatus === 'pending' || caseStatus === 'closed')\\\"\\r\\n        (click)=\\\"presentActionSheet()\\\">\\r\\n        Actions\\r\\n      </ion-button>\\r\\n      <ion-button color=\\\"primary\\\" *ngIf=\\\"caseStatus === 'active' && !isAccepted\\\" (click)=\\\"acceptCase()\\\">\\r\\n        <ion-icon name=\\\"add-circle\\\"></ion-icon> Accept\\r\\n      </ion-button>\\r\\n\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      <img alt=\\\"logo\\\" height=\\\"40\\\" src=\\\"assets/logo.png\\\">\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar [color]=\\\"theCase?.status_color\\\">\\r\\n    <ion-buttons slot=\\\"start\\\" *ngIf=\\\"action.show\\\">\\r\\n      <ion-button color=\\\"primary\\\" fill=\\\"solid\\\" (click)=\\\"doAction()\\\" [disabled]=\\\"!action.note\\\">\\r\\n        {{action.btnText}}\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>{{theCase?.status_text}}</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"!isCaseActioned && isToAssignAction && !action.show\\\">\\r\\n      <ion-button color=\\\"light\\\" fill=\\\"solid\\\"\\r\\n        (click)=\\\"presentAssignConfirm('Are sure you want to assign this case to your self?', true)\\\">\\r\\n        <ion-icon name=\\\"person\\\"></ion-icon> Assign to me\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"action.show\\\">\\r\\n      <ion-button color=\\\"warning\\\" fill=\\\"solid\\\" (click)=\\\"cancelAction()\\\">\\r\\n        Cancel\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <ion-toolbar *ngIf=\\\"action.show\\\">\\r\\n    <textarea name=\\\"remarks\\\" class=\\\"input-textarea\\\" [(ngModel)]=\\\"action.note\\\"\\r\\n      [placeholder]=\\\"action.type === 'note' ? 'Add your note here..' : 'Add your remarks here..'\\\" rows=\\\"5\\\"></textarea>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <ion-toolbar *ngIf=\\\"action.show && action.type === 'forward'\\\">\\r\\n    <ion-item class=\\\"input-bordered\\\" lines=\\\"none\\\">\\r\\n      <ion-label>Forward to</ion-label>\\r\\n      <ionic-selectable [(ngModel)]=\\\"contact\\\" [items]=\\\"contacts\\\" itemValueField=\\\"id\\\" itemTextField=\\\"full_name\\\"\\r\\n        [canSearch]=\\\"true\\\" [isMultiple]=\\\"true\\\" (onChange)=\\\"contactChange($event)\\\">\\r\\n      </ionic-selectable>\\r\\n    </ion-item>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n    <ion-list-header color=\\\"medium\\\">\\r\\n      <ion-label>Caller Information</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>First name</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caller_first_name}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Last name</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caller_last_name}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Caller type</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caller_type}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Type of caregiver</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caregiver_type}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item href=\\\"tel:{{theCase?.caller_telephone_number}}\\\">\\r\\n      <ion-label>Caller telephone</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caller_telephone_number}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Is hospital related</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.hospital_related}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Caregiver clock in code</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caregiver_time_and_attendance_pin_code || 'not available'}}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\">\\r\\n      <ion-label>Call Information</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>Call type </ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.call_type}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Timesheet concern</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.was_timesheet_submitted}}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\">\\r\\n      <ion-label>Caregiver Information</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>Type of caregiver</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caregiver_type}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>First name</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caller_first_name}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Last name</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caller_last_name}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item href=\\\"tel:{{theCase?.caller_telephone_number}}\\\">\\r\\n      <ion-label>Telephone number</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.caller_telephone_number}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Povide start time of shift</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.employee_date_time_of_shift_start}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Povide end time of shift</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.employee_date_time_of_shift_end}}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\">\\r\\n      <ion-label>Other information</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>Call reason</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.call_reason}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Call language</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.call_language}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Number of calls</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.number_of_calls}}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\">\\r\\n      <ion-label>Case Created</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>Created case date/time</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.created_at | date: 'short' }}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\">\\r\\n      <ion-label>Case Read</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item>\\r\\n      <ion-label>Read case date/time</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.readData.updated_at | date: 'short' }}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"isForwarded\\\">\\r\\n      <ion-label>Forward Details</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngIf=\\\"isForwarded\\\">\\r\\n      <ion-label>Message</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{messages.forwardMessage }}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"isForwarded\\\">\\r\\n      <ion-label>Forwarded to</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{ messages.forwardedTo}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"isForwarded\\\">\\r\\n      <ion-label>Forwarded date/time</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{messages.forwardDate | date: 'short' }}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"caseStatus === 'pending' && theCase?.ownership_text !== 'Forwarded'\\\">\\r\\n      <ion-label>Accepted Details</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngIf=\\\"caseStatus === 'pending' && theCase?.ownership_text !== 'Forwarded'\\\">\\r\\n      <ion-label>Accepted date/time</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{theCase?.accepted[0].updated_at | date: 'short' }}</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"isClosed\\\">\\r\\n      <ion-label>Closed Details</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngIf=\\\"isClosed\\\">\\r\\n      <ion-label>Message</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{messages.closeMessage }}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"isClosed\\\">\\r\\n      <ion-label>Closed by</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">Paul Lieberman</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"isClosed\\\">\\r\\n      <ion-label>Closed Date/Time</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">12/12/2018 10:10PM</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"declineNote\\\">\\r\\n      <ion-label>Decline Details</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngIf=\\\"declineNote\\\">\\r\\n      <ion-label>Message</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">{{declineNote}}</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"declineNote\\\">\\r\\n      <ion-label>Declined by</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">Paul Lieberman</ion-note>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"declineNote\\\">\\r\\n      <ion-label>Decline Date/Time</ion-label>\\r\\n      <ion-note slot=\\\"end\\\">12/12/2018 10:10PM</ion-note>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"theCase?.notes.length\\\">\\r\\n      <ion-label>\\r\\n        Case Notes\\r\\n        <ion-note color=\\\"primary\\\">({{theCase?.notes.length}})</ion-note>\\r\\n\\r\\n      </ion-label>\\r\\n    </ion-list-header>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-card *ngIf=\\\"theCase?.notes.length\\\">\\r\\n    <ion-list>\\r\\n      <ion-item *ngFor=\\\"let note of theCase?.notes\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img [src]=\\\"note.user.avatar\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-label text-wrap>\\r\\n          <h2>{{note.user.fname}} {{note.user.lname}}</h2>\\r\\n          <p>{{note.note}}</p>\\r\\n        </ion-label>\\r\\n        <small slot=\\\"end\\\" color=\\\"light\\\">\\r\\n          {{ note.created_at | date: 'shortTime'}} <br>\\r\\n          {{ note.created_at | date: 'mediumDate'}} <br>\\r\\n        </small>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nhc2VzL2RldGFpbHMvZGV0YWlscy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { ActionSheetController } from '@ionic/angular';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IonicSelectableComponent } from 'ionic-selectable';\r\nimport { CaseService } from 'src/app/services/case.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { CommonService } from 'src/app/services/common.service';\r\n\r\nclass Port {\r\n  public id: number;\r\n  public name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.page.html',\r\n  styleUrls: ['./details.page.scss'],\r\n})\r\nexport class DetailsPage implements OnInit {\r\n  contacts: any[];\r\n  contact: any;\r\n  forwardRecepients: any[];\r\n  formattedRecepients: any[];\r\n\r\n\r\n\r\n  isClosed: boolean = false;\r\n  isAssign: boolean = false;\r\n  isCaseActioned: boolean = false;\r\n  isToAssignAction: boolean = false;\r\n  declineNote: string = '';\r\n  caseStatus: string = '';\r\n  userInfo: any;\r\n  id: number;\r\n  cases: any;\r\n  theCase: any;\r\n  messages: any = {\r\n    closeDate: new Date(),\r\n    forwardDate: new Date(),\r\n    closeMessage: '',\r\n    forwardMesssage: '',\r\n    forwardedTo: '',\r\n    notes: [],\r\n  };\r\n  isForwarded: boolean = false;\r\n  isAccepted: boolean = false;\r\n  action: any = {\r\n    type: 'note',\r\n    show: false,\r\n    note: '',\r\n    forwardedTo: '',\r\n    btnText: 'Add Note'\r\n  };\r\n\r\n  constructor(\r\n    public caseService: CaseService,\r\n    public userService: UserService,\r\n    public commonService: CommonService,\r\n    public route: ActivatedRoute,\r\n    public router: Router,\r\n    public actionSheetController: ActionSheetController,\r\n    public alertController: AlertController,\r\n    public toastController: ToastController\r\n    ) {\r\n      // this.contacts = [\r\n      //   { id: 1, name: 'Andy Ant' },\r\n      //   { id: 2, name: 'Pedro Pony' },\r\n      //   { id: 3, name: 'Roger Rabbit' },\r\n      //   { id: 4, name: 'Rebecca Rabbit' },\r\n      //   { id: 5, name: 'Danny Dog' }\r\n      // ];\r\n    }\r\n\r\n  ngOnInit() {\r\n    console.log(this.route);\r\n    this.isToAssignAction = !!this.route.snapshot.params['toAssign'];\r\n    this.caseStatus = this.route.snapshot.params['caseStatus'];\r\n    this.id = parseInt(this.route.snapshot.params['id'], 10);\r\n    this.userInfo = this.userService.getUserInfo();\r\n    console.log(this.id, 'this.id');\r\n\r\n    this.cases = JSON.parse(localStorage.getItem(\"cases\"));\r\n    this.markAsRead();\r\n\r\n    if (this.caseStatus === 'closed') {\r\n      this.isClosed = true;\r\n      this.messages.closeMessage = 'My close message is nice..';\r\n    }\r\n\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers() {\r\n    this.userService.getUsers({})\r\n      .subscribe((users: any) => {\r\n        this.contacts = users;\r\n      })\r\n  }\r\n  contactChange(event: {\r\n    component: IonicSelectableComponent,\r\n    value: any \r\n  }) {\r\n    console.log('contact:', event.value);\r\n    this.forwardRecepients = event.value;\r\n    this.formattedRecepients = event.value.map(({ id }) => id);\r\n    this.action.forwardedTo = Array.prototype.map.call(event.value, (s: any) => s.name).toString();\r\n  }\r\n\r\n  markAsRead() {\r\n    this.commonService.presentLoading();\r\n    this.caseService.getCase(this.id, this.userInfo.id)\r\n    .subscribe((res: any) => {\r\n      this.commonService.stopLoading();\r\n      this.theCase = res;\r\n      this.isAccepted = res.isAccepted || res.status_text === 'Closed';\r\n      this.isCaseActioned = res.isAccepted;\r\n      // this.isToAssignAction = res.ownership_text !== 'Forwarded';\r\n      // this.isToAssignAction = !res.isAccepted && res.status_text === 'Pending';\r\n      this.caseStatus = res.status_text.toLowerCase();\r\n      this.isClosed = res.status_text === 'Closed';\r\n      console.log('this.theCase :', this.theCase);\r\n      // console.log(this.theCase , this.isAccepted, this.caseStatus, 'res');\r\n    }, () => {\r\n      this.commonService.stopLoading();\r\n    });\r\n\r\n    // this.cases.map((item: any, index: number) => {\r\n    //   if (index === this.id) {\r\n    //     item.read = true;\r\n    //     console.log(item);\r\n    //   }\r\n    //   return item;\r\n    // });\r\n    // localStorage.setItem(\"cases\", JSON.stringify(this.cases));\r\n  }\r\n\r\n  setCaseData(params: any) {\r\n    console.log(params);\r\n    // this.cases.map((item: any, index: number) => {\r\n    //   // let cc = item;\r\n    //   if (index === this.id) {\r\n    //     item.status = params.status;\r\n    //     item.statusColor = params.statusColor;\r\n    //     item.callStatus = params.callStatus;\r\n    //     item.callStatusColor = params.callStatusColor;\r\n    //     item.lastAssignee = params.lastAssignee;\r\n    //   }\r\n    //   return item;\r\n    // });\r\n    // localStorage.setItem(\"cases\", JSON.stringify(this.cases));\r\n  }\r\n\r\n  acceptCase() {\r\n    this.presentAcceptConfirm('Are you sure you want to accept case?');\r\n  }\r\n\r\n  doAction() {\r\n    if (this.action.type === 'note') {\r\n      this.caseService.addNote({note: this.action.note, created_by: this.userInfo.id, id: this.id})\r\n      .subscribe(() => {\r\n        this.markAsRead();\r\n        // this.messages.notes.push({message: this.action.note, date: new Date()});\r\n        this.presentToastWithOptions(`Note added successfully.`);\r\n        this.action.note = '';\r\n        this.action.show = false;\r\n      })\r\n    }\r\n    else if (this.action.type === 'forward') {\r\n      this.commonService.presentLoading();\r\n      this.caseService.forwardCase({\r\n        case_id: this.id,\r\n        user_id: this.userInfo.id,\r\n        note: this.action.note,\r\n        recipient: this.formattedRecepients\r\n      })\r\n      \r\n      .subscribe((res: any) => {\r\n        this.commonService.loadingBox.dismiss();\r\n        this.messages.forwardMessage = this.action.note;\r\n        this.messages.forwardedTo = this.action.forwardedTo;\r\n        this.messages.forwardDate = new Date();\r\n        this.isForwarded = true;\r\n        this.presentToastWithOptions(`Case forwarded successfully.`);\r\n        this.action.note = '';\r\n        this.action.show = false;\r\n        this.markAsRead();\r\n        this.setCaseData({\r\n          status: 'Pending',\r\n          statusColor: 'danger',\r\n          callStatus: 'Forwarded',\r\n          from: this.userInfo.full_name,\r\n          callStatusColor: 'warning',\r\n          lastAssignee: this.action.forwardedTo\r\n        });\r\n      }, () => {\r\n        this.commonService.loadingBox.dismiss();\r\n        \r\n      });\r\n    }\r\n    else if (this.action.type === 'close') {\r\n      this.CloseCaseConfirm(this.action.note);\r\n    }\r\n    else if (this.action.type === 'decline') {\r\n      this.presentAssignConfirm('Are sure you want to decline case?', false);\r\n    }\r\n  }\r\n\r\n  declineAction() {\r\n    this.action.show = true;\r\n    this.action.type = 'decline';\r\n    this.action.btnText = 'Decline Case';\r\n  }\r\n\r\n  cancelAction(){\r\n    this.action.show = false;\r\n    this.action.note = '';\r\n  }\r\n  // getValuesFromForm() {\r\n  //   this.router.navigate(['/RemarkComponent']);\r\n  // }\r\n  async presentAssignConfirm(message, isAssign) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirm!',\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'success',\r\n          handler: (blah) => {\r\n            console.log('Confirm Cancel: blah');\r\n            this.action.show = false;\r\n          }\r\n        }, {\r\n          text: isAssign ? 'Assign' : 'Decline',\r\n          handler: () => {\r\n            this.commonService.presentLoading();\r\n            this.caseService.acceptCase(this.id, this.userInfo.id)\r\n            .subscribe(()=> {\r\n              // this.presentToastWithOptions(`Case accepted successfully.`);\r\n              // this.markAsRead();\r\n              // this.isAccepted = true;\r\n\r\n              this.commonService.loadingBox.dismiss();\r\n              this.router.navigate([`/tabs/tab1/case/details/${this.id}/pending`]);\r\n              this.presentToastWithOptions(`Action saved successfully.`);\r\n\r\n              console.log('Confirm Okay');\r\n              // if (isAssign) {\r\n              //   this.isAccepted = true;\r\n              //   this.setCaseData({\r\n              //     status: 'Pending',\r\n              //     statusColor: 'danger',\r\n              //     callStatus: 'Accepted',\r\n              //     callStatusColor: 'primary',\r\n              //     lastAssignee: 'Paul Lieberman'\r\n              //   });\r\n              // }\r\n              // this.isAssign = isAssign;\r\n              // this.isCaseActioned = true;\r\n              // this.declineNote = this.action.note;\r\n              // this.action.show = false;\r\n              // this.action.note = '';\r\n            }, () => {\r\n              this.commonService.loadingBox.dismiss();\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async presentAcceptConfirm(message) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirm!',\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'success',\r\n          handler: (blah) => {\r\n            console.log('Confirm Cancel: blah');\r\n          }\r\n        }, {\r\n          text: 'Accept',\r\n          handler: () => {\r\n            console.log('Confirm Okay');\r\n            this.caseService.acceptCase(this.id, this.userInfo.id)\r\n            .subscribe(()=> {\r\n              this.presentToastWithOptions(`Case accepted successfully.`);\r\n              this.markAsRead();\r\n              this.isAccepted = true;\r\n            });\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async presentReOpen(message) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirm!',\r\n      message,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'success',\r\n          handler: (blah) => {\r\n            console.log('Confirm Cancel: blah');\r\n          }\r\n        }, {\r\n          text: 'Re-Open',\r\n          handler: () => {\r\n            console.log('Confirm Okay');\r\n            this.caseService.caseReopen({case_id: this.id, user_id: this.userInfo.id, note: 'Reopen case note', case_form: 'close'})\r\n            .subscribe(()=> {\r\n              this.presentToastWithOptions(`Case reopen successfully.`);\r\n              // this.router.navigate([`/tabs/tab1/case/details/${this.id}/pending`]);\r\n\r\n              // this.markAsRead();\r\n              // this.isAccepted = true;\r\n            });\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async presentToastWithOptions(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message || 'Your settings have been saved.',\r\n      showCloseButton: true,\r\n      position: 'top',\r\n      duration: 2000,\r\n      closeButtonText: 'Close'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async presentActionSheet() {\r\n    const buttons = this.isClosed ? [{\r\n      text: 'Re-Open',\r\n      handler: () => {\r\n        this.presentReOpen('Are you sure you want to reopen case?');\r\n      }\r\n    }, {\r\n      text: 'Cancel',\r\n      role: 'cancel',\r\n      handler: () => {\r\n        console.log('Cancel clicked');\r\n      }\r\n    }] : [{\r\n      text: 'Forward',\r\n      handler: () => {\r\n        // this.presentForwardPrompt();\r\n        this.action.show = true;\r\n        this.action.type = 'forward';\r\n        this.action.btnText = 'Forward';\r\n      }\r\n    }, {\r\n      text: 'Add Note',\r\n      handler: () => {\r\n        // this.presentAddNotePrompt();\r\n        this.action.show = true;\r\n        this.action.type = 'note';\r\n        this.action.btnText = 'Add Note';\r\n      }\r\n    }, {\r\n      text: 'Close Case',\r\n      handler: () => {\r\n        // this.presentCloseCasePrompt();\r\n        this.action.show = true;\r\n        this.action.type = 'close';\r\n        this.action.btnText = 'Close Case';\r\n      }\r\n    }, {\r\n      text: 'Cancel',\r\n      role: 'cancel',\r\n      handler: () => {\r\n        console.log('Cancel clicked');\r\n      }\r\n    }];\r\n    const actionSheet = await this.actionSheetController.create({\r\n      header: 'Action',\r\n      buttons\r\n    });\r\n    await actionSheet.present();\r\n  }\r\n\r\n  async presentCloseCasePrompt() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Enter remarks',\r\n      subHeader: 'Please enter notes/remark',\r\n      inputs: [\r\n        {\r\n          name: 'closeMessage',\r\n          type: 'text',\r\n          placeholder: 'Enter your notes'\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            console.log('Confirm Cancel');\r\n          }\r\n        }, {\r\n          text: 'Close',\r\n          handler: (event) => {\r\n            console.log(event, 'Confirm Ok');\r\n            this.CloseCaseConfirm(event.closeMessage);\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async CloseCaseConfirm(message) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirm!',\r\n      message: 'Please confirm you want to close case.',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: (blah) => {\r\n            console.log('Confirm Cancel: blah');\r\n          }\r\n        }, {\r\n          text: 'Confirm',\r\n          handler: () => {\r\n            console.log('Confirm Okay');\r\n\r\n            this.caseService.closeCase({case_id: this.id, user_id: this.userInfo.id, note: message})\r\n            .subscribe(()=> {\r\n              this.presentToastWithOptions(`Case closed successfully.`);\r\n              this.markAsRead();\r\n              this.messages.closeMessage = message;\r\n              this.messages.closeDate = new Date();\r\n              this.isClosed = true;\r\n              this.caseStatus = 'closed';\r\n              this.action.show = false;\r\n            });\r\n            // this.setCaseData({\r\n            //   status: 'Closed',\r\n            //   statusColor: 'success',\r\n            //   callStatus: 'Closed',\r\n            //   callStatusColor: 'success',\r\n            //   lastAssignee: 'Paul Lieberman'\r\n            // });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // async presentAddNotePrompt() {\r\n  //   const alert = await this.alertController.create({\r\n  //     header: 'Enter remarks',\r\n  //     subHeader: 'Please enter notes/remark',\r\n  //     inputs: [\r\n  //       {\r\n  //         name: 'closeMessage',\r\n  //         type: 'text',\r\n  //         placeholder: 'Enter your notes'\r\n  //       },\r\n  //     ],\r\n  //     buttons: [\r\n  //       {\r\n  //         text: 'Cancel',\r\n  //         role: 'cancel',\r\n  //         cssClass: 'secondary',\r\n  //         handler: () => {\r\n  //           console.log('Confirm Cancel');\r\n  //         }\r\n  //       }, {\r\n  //         text: 'Add Note',\r\n  //         handler: (event) => {\r\n  //           this.messages.notes.push({message: event.closeMessage, date: new Date()});\r\n  //           this.presentToastWithOptions(`Note added successfully.`);\r\n  //         }\r\n  //       }\r\n  //     ]\r\n  //   });\r\n\r\n  //   await alert.present();\r\n  // }\r\n\r\n  // async presentForwardPrompt() {\r\n  //   const alert = await this.alertController.create({\r\n  //     header: 'Enter remarks',\r\n  //     subHeader: 'Please enter notes/remark',\r\n  //     inputs: [\r\n  //       {\r\n  //         name: 'forwardMessage',\r\n  //         type: 'text',\r\n  //         placeholder: 'Enter your notes'\r\n  //       },\r\n  //       {\r\n  //         name: 'forwardedTo',\r\n  //         type: 'text',\r\n  //         id: 'name2-id',\r\n  //         // value: 'Paul Lieberman',\r\n  //         placeholder: 'Send to'\r\n  //       },\r\n  //     ],\r\n  //     buttons: [\r\n  //       {\r\n  //         text: 'Cancel',\r\n  //         role: 'cancel',\r\n  //         cssClass: 'secondary',\r\n  //         handler: () => {\r\n  //           console.log('Confirm Cancel');\r\n  //         }\r\n  //       }, {\r\n  //         text: 'Forward',\r\n  //         handler: (event) => {\r\n  //           this.messages.forwardMessage = event.forwardMessage;\r\n  //           this.messages.forwardedTo = event.forwardedTo;\r\n  //           this.messages.forwardDate = new Date();\r\n  //           this.isForwarded = true;\r\n  //           console.log('Confirm Ok');\r\n  //         }\r\n  //       }\r\n  //     ]\r\n  //   });\r\n\r\n  //   await alert.present();\r\n  // }\r\n\r\n}\r\n"],"sourceRoot":""}