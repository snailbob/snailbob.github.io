{"version":3,"sources":["webpack:///./src/app/cases/details/details.module.ts","webpack:///./src/app/cases/details/details.page.html","webpack:///./src/app/cases/details/details.page.scss","webpack:///./src/app/cases/details/details.page.ts"],"names":[],"mappings":"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","file":"cases-details-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\nimport { DetailsPage } from './details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    IonicSelectableModule\n  ],\n  declarations: [DetailsPage]\n})\nexport class DetailsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"primary\\\" *ngIf=\\\"caseStatus === 'pending' || isAccepted && !isClosed\\\"\\n        (click)=\\\"presentActionSheet()\\\">\\n        <ion-icon name=\\\"chatbubbles\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"primary\\\" *ngIf=\\\"caseStatus === 'active' && !isAccepted\\\" (click)=\\\"acceptCase()\\\">\\n        <ion-icon name=\\\"add-circle\\\"></ion-icon> Accept\\n      </ion-button>\\n\\n    </ion-buttons>\\n    <ion-title>\\n      <img alt=\\\"logo\\\" height=\\\"40\\\" src=\\\"assets/logo.png\\\">\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"!isCaseActioned && isToAssignAction && !action.show\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"primary\\\" fill=\\\"solid\\\"\\n        (click)=\\\"presentAssignConfirm('Are sure you want to assign this case to your self?', true)\\\">\\n        <ion-icon name=\\\"person\\\"></ion-icon> Assign to me\\n      </ion-button>\\n\\n    </ion-buttons>\\n    <!-- <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"warning\\\" fill=\\\"solid\\\" (click)=\\\"declineAction()\\\">\\n        <ion-icon name=\\\"close-circle\\\"></ion-icon> Decline\\n      </ion-button>\\n    </ion-buttons> -->\\n  </ion-toolbar>\\n\\n  <ion-toolbar *ngIf=\\\"action.show\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"primary\\\" fill=\\\"solid\\\" (click)=\\\"doAction()\\\" [disabled]=\\\"!action.note\\\">\\n        {{action.btnText}}\\n      </ion-button>\\n\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"warning\\\" fill=\\\"solid\\\" (click)=\\\"cancelAction()\\\">\\n        Cancel\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"action.show\\\">\\n    <textarea name=\\\"remarks\\\" class=\\\"input-textarea\\\" [(ngModel)]=\\\"action.note\\\"\\n      [placeholder]=\\\"action.type === 'note' ? 'Add your note here..' : 'Add your remarks here..'\\\" rows=\\\"5\\\"></textarea>\\n  </ion-toolbar>\\n\\n  <ion-toolbar *ngIf=\\\"action.show && action.type === 'forward'\\\">\\n    <ion-item class=\\\"input-bordered\\\" lines=\\\"none\\\">\\n      <ion-label>Forward to</ion-label>\\n      <ionic-selectable [(ngModel)]=\\\"contact\\\" [items]=\\\"contacts\\\" itemValueField=\\\"id\\\" itemTextField=\\\"name\\\"\\n        [canSearch]=\\\"true\\\" [isMultiple]=\\\"true\\\" (onChange)=\\\"contactChange($event)\\\">\\n      </ionic-selectable>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header color=\\\"medium\\\">\\n      <ion-label>Caller Information</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>First name</ion-label>\\n      <ion-note slot=\\\"end\\\">Michael</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Last name</ion-label>\\n      <ion-note slot=\\\"end\\\">Basalan</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Caller type</ion-label>\\n      <ion-note slot=\\\"end\\\">caregiver</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Type of caregiver</ion-label>\\n      <ion-note slot=\\\"end\\\">caregiver</ion-note>\\n    </ion-item>\\n    <ion-item href=\\\"tel:2342342343442\\\">\\n      <ion-label>Caller telephone</ion-label>\\n      <ion-note slot=\\\"end\\\">2342342343442</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Is hospital related</ion-label>\\n      <ion-note slot=\\\"end\\\">No</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Caregiver clock in code</ion-label>\\n      <ion-note slot=\\\"end\\\">123213</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\">\\n      <ion-label>Call Information</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>Call type </ion-label>\\n      <ion-note slot=\\\"end\\\">Office; timesheet</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Timesheet concern</ion-label>\\n      <ion-note slot=\\\"end\\\">verifying timesheet</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\">\\n      <ion-label>Caregiver Information</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>Type of caregiver</ion-label>\\n      <ion-note slot=\\\"end\\\">home health aide</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>First name</ion-label>\\n      <ion-note slot=\\\"end\\\">Michael</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Last name</ion-label>\\n      <ion-note slot=\\\"end\\\">Basalan</ion-note>\\n    </ion-item>\\n    <ion-item href=\\\"tel:2342342343442\\\">\\n      <ion-label>Telephone number</ion-label>\\n      <ion-note slot=\\\"end\\\">2342342343442</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Povide start time of shift</ion-label>\\n      <ion-note slot=\\\"end\\\">No</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Povide end time of shift</ion-label>\\n      <ion-note slot=\\\"end\\\">123213</ion-note>\\n    </ion-item>\\n\\n\\n    <ion-list-header color=\\\"medium\\\">\\n      <ion-label>Other information</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>Call reason</ion-label>\\n      <ion-note slot=\\\"end\\\">test</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Call language</ion-label>\\n      <ion-note slot=\\\"end\\\">no</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Number of calls</ion-label>\\n      <ion-note slot=\\\"end\\\">1st time</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\">\\n      <ion-label>Case Created</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>Created case date</ion-label>\\n      <ion-note slot=\\\"end\\\">12/12/2018</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Created case time</ion-label>\\n      <ion-note slot=\\\"end\\\">10:10PM</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\">\\n      <ion-label>Case Read</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>Read case date</ion-label>\\n      <ion-note slot=\\\"end\\\">12/12/2018</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Read case time</ion-label>\\n      <ion-note slot=\\\"end\\\">10:10PM</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"isForwarded\\\">\\n      <ion-label>Forward Details</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngIf=\\\"isForwarded\\\">\\n      <ion-label>Message</ion-label>\\n      <ion-note slot=\\\"end\\\">{{messages.forwardMessage }}</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isForwarded\\\">\\n      <ion-label>Forwarded to</ion-label>\\n      <ion-note slot=\\\"end\\\">{{ messages.forwardedTo}}</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isForwarded\\\">\\n      <ion-label>Forwarded date</ion-label>\\n      <ion-note slot=\\\"end\\\">{{messages.forwardDate | date }}</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isForwarded\\\">\\n      <ion-label>Forwarded time</ion-label>\\n      <ion-note slot=\\\"end\\\">{{messages.forwardDate | date: 'shortTime' }}</ion-note>\\n    </ion-item>\\n    \\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"isAccepted\\\">\\n      <ion-label>Accepted Details</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngIf=\\\"isAccepted\\\">\\n      <ion-label>Accepted date</ion-label>\\n      <ion-note slot=\\\"end\\\">{{messages.forwardDate | date }}</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isAccepted\\\">\\n      <ion-label>Accepted time</ion-label>\\n      <ion-note slot=\\\"end\\\">{{messages.forwardDate | date: 'shortTime' }}</ion-note>\\n    </ion-item>\\n    \\n\\n    <!-- <ion-list-header color=\\\"medium\\\">\\n      <ion-label>Case Sent</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>Sent case date</ion-label>\\n      <ion-note slot=\\\"end\\\">12/12/2018</ion-note>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Sent case time</ion-label>\\n      <ion-note slot=\\\"end\\\">10:10PM</ion-note>\\n    </ion-item> -->\\n\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"isCaseActioned\\\">\\n      <ion-label>Case forward status</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngIf=\\\"isCaseActioned\\\">\\n      <ion-label>Forwarded to</ion-label>\\n      <ion-note slot=\\\"end\\\">Paul Lieberman</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isCaseActioned\\\">\\n      <ion-label>Respond</ion-label>\\n      <ion-note slot=\\\"end\\\">{{isAssign ? 'Assigned' : 'Declined'}}</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isCaseActioned\\\">\\n      <ion-label>Respond Date/Time</ion-label>\\n      <ion-note slot=\\\"end\\\">12/12/2018 10:10PM</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"isClosed\\\">\\n      <ion-label>Closed Details</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngIf=\\\"isClosed\\\">\\n      <ion-label>Message</ion-label>\\n      <ion-note slot=\\\"end\\\">{{messages.closeMessage }}</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isClosed\\\">\\n      <ion-label>Closed by</ion-label>\\n      <ion-note slot=\\\"end\\\">Paul Lieberman</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"isClosed\\\">\\n      <ion-label>Closed Date/Time</ion-label>\\n      <ion-note slot=\\\"end\\\">12/12/2018 10:10PM</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"declineNote\\\">\\n      <ion-label>Decline Details</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngIf=\\\"declineNote\\\">\\n      <ion-label>Message</ion-label>\\n      <ion-note slot=\\\"end\\\">{{declineNote}}</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"declineNote\\\">\\n      <ion-label>Declined by</ion-label>\\n      <ion-note slot=\\\"end\\\">Paul Lieberman</ion-note>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"declineNote\\\">\\n      <ion-label>Decline Date/Time</ion-label>\\n      <ion-note slot=\\\"end\\\">12/12/2018 10:10PM</ion-note>\\n    </ion-item>\\n\\n    <ion-list-header color=\\\"medium\\\" *ngIf=\\\"messages.notes.length\\\">\\n      <ion-label>Case Notes</ion-label>\\n    </ion-list-header>\\n  </ion-list>\\n\\n  <ion-card *ngFor=\\\"let note of messages.notes\\\">\\n    <ion-list lines=\\\"none\\\">\\n      <ion-item>\\n        <ion-label>Note</ion-label>\\n        <ion-note slot=\\\"end\\\">{{note.message}}</ion-note>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Date Added</ion-label>\\n        <ion-note slot=\\\"end\\\">{{note.date | date: 'MMM d, y, h:mm a' }}</ion-note>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Added by</ion-label>\\n        <ion-note slot=\\\"end\\\">Paul Lieberman</ion-note>\\n      </ion-item>\\n    </ion-list>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nhc2VzL2RldGFpbHMvZGV0YWlscy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { ActionSheetController } from '@ionic/angular';\nimport { ToastController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { IonicSelectableComponent } from 'ionic-selectable';\n\nclass Port {\n  public id: number;\n  public name: string;\n}\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.page.html',\n  styleUrls: ['./details.page.scss'],\n})\nexport class DetailsPage implements OnInit {\n  contacts: Port[];\n  contact: Port;\n\n\n\n  isClosed: boolean = false;\n  isAssign: boolean = false;\n  isCaseActioned: boolean = false;\n  isToAssignAction: boolean = false;\n  declineNote: string = '';\n  caseStatus: string = '';\n  id: number;\n  cases: any;\n  messages: any = {\n    closeDate: new Date(),\n    forwardDate: new Date(),\n    closeMessage: '',\n    forwardMesssage: '',\n    forwardedTo: '',\n    notes: [],\n  };\n  isForwarded: boolean = false;\n  isAccepted: boolean = false;\n  action: any = {\n    type: 'note',\n    show: false,\n    note: '',\n    forwardedTo: '',\n    btnText: 'Add Note'\n  };\n\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public actionSheetController: ActionSheetController,\n    public alertController: AlertController,\n    public toastController: ToastController\n    ) {\n      this.contacts = [\n        { id: 1, name: 'Andy Ant' },\n        { id: 2, name: 'Pedro Pony' },\n        { id: 3, name: 'Roger Rabbit' },\n        { id: 4, name: 'Rebecca Rabbit' },\n        { id: 5, name: 'Danny Dog' }\n      ];\n    }\n\n  ngOnInit() {\n    console.log(this.route);\n    this.isToAssignAction = !!this.route.snapshot.params['toAssign'];\n    this.caseStatus = this.route.snapshot.params['caseStatus'];\n    this.id = parseInt(this.route.snapshot.params['id'], 10);\n    console.log(this.id, 'this.id');\n\n    this.cases = JSON.parse(localStorage.getItem(\"cases\"));\n    this.markAsRead();\n\n    if (this.caseStatus === 'closed') {\n      this.isClosed = true;\n      this.messages.closeMessage = 'My close message is nice..';\n    }\n  }\n\n  contactChange(event: {\n    component: IonicSelectableComponent,\n    value: any \n  }) {\n    console.log('contact:', event.value);\n    this.action.forwardedTo = Array.prototype.map.call(event.value, s => s.name).toString();\n  }\n\n  markAsRead() {\n    this.cases.map((item: any, index: number) => {\n      if (index === this.id) {\n        item.read = true;\n        console.log(item);\n      }\n      return item;\n    });\n    localStorage.setItem(\"cases\", JSON.stringify(this.cases));\n  }\n\n  setCaseData(params) {\n    this.cases.map((item: any, index: number) => {\n      // let cc = item;\n      if (index === this.id) {\n        item.status = params.status;\n        item.statusColor = params.statusColor;\n        item.callStatus = params.callStatus;\n        item.callStatusColor = params.callStatusColor;\n        item.lastAssignee = params.lastAssignee;\n      }\n      return item;\n    });\n    localStorage.setItem(\"cases\", JSON.stringify(this.cases));\n  }\n\n  acceptCase() {\n    this.presentAcceptConfirm('Are you sure you want to accept caes?');\n  }\n\n  doAction() {\n    if (this.action.type === 'note') {\n      this.messages.notes.push({message: this.action.note, date: new Date()});\n      this.presentToastWithOptions(`Note added successfully.`);\n      this.action.note = '';\n      this.action.show = false;\n    }\n    else if (this.action.type === 'forward') {\n      this.messages.forwardMessage = this.action.note;\n      this.messages.forwardedTo = this.action.forwardedTo;\n      this.messages.forwardDate = new Date();\n      this.isForwarded = true;\n      this.presentToastWithOptions(`Case forwarded successfully.`);\n      this.action.note = '';\n      this.action.show = false;\n      this.setCaseData({\n        status: 'Pending',\n        statusColor: 'danger',\n        callStatus: 'Forwarded',\n        from: 'Paul Lieberman',\n        callStatusColor: 'warning',\n        lastAssignee: this.action.forwardedTo\n      });\n    }\n    else if (this.action.type === 'close') {\n      this.CloseCaseConfirm(this.action.note);\n    }\n    else if (this.action.type === 'decline') {\n      this.presentAssignConfirm('Are sure you want to decline case?', false);\n    }\n  }\n\n  declineAction() {\n    this.action.show = true;\n    this.action.type = 'decline';\n    this.action.btnText = 'Decline Case';\n  }\n\n  cancelAction(){\n    this.action.show = false;\n    this.action.note = '';\n  }\n  // getValuesFromForm() {\n  //   this.router.navigate(['/RemarkComponent']);\n  // }\n  async presentAssignConfirm(message, isAssign) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message,\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'success',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n            this.action.show = false;\n          }\n        }, {\n          text: isAssign ? 'Assign' : 'Decline',\n          handler: () => {\n            console.log('Confirm Okay');\n            this.presentToastWithOptions(`Action saved successfully.`);\n            if (isAssign) {\n              this.isAccepted = true;\n              this.setCaseData({\n                status: 'Pending',\n                statusColor: 'danger',\n                callStatus: 'Accepted',\n                callStatusColor: 'primary',\n                lastAssignee: 'Paul Lieberman'\n              });\n            }\n            this.isAssign = isAssign;\n            this.isCaseActioned = true;\n            this.declineNote = this.action.note;\n            this.action.show = false;\n            this.action.note = '';\n\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentAcceptConfirm(message) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message,\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'success',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Accept',\n          handler: () => {\n            console.log('Confirm Okay');\n            this.presentToastWithOptions(`Case accepted successfully.`);\n\n            this.isAccepted = true;\n            this.setCaseData({\n              status: 'Pending',\n              statusColor: 'danger',\n              callStatus: 'Accepted',\n              callStatusColor: 'primary',\n              lastAssignee: 'Paul Lieberman'\n            });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async presentToastWithOptions(message: string) {\n    const toast = await this.toastController.create({\n      message: message || 'Your settings have been saved.',\n      showCloseButton: true,\n      position: 'top',\n      duration: 2000,\n      closeButtonText: 'Close'\n    });\n    toast.present();\n  }\n\n  async presentActionSheet() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Action',\n      buttons: [{\n        text: 'Forward',\n        handler: () => {\n          // this.presentForwardPrompt();\n          this.action.show = true;\n          this.action.type = 'forward';\n          this.action.btnText = 'Forward';\n        }\n      }, {\n        text: 'Add Note',\n        handler: () => {\n          // this.presentAddNotePrompt();\n          this.action.show = true;\n          this.action.type = 'note';\n          this.action.btnText = 'Add Note';\n        }\n      }, {\n        text: 'Close Case',\n        handler: () => {\n          // this.presentCloseCasePrompt();\n          this.action.show = true;\n          this.action.type = 'close';\n          this.action.btnText = 'Close Case';\n        }\n      }, {\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {\n          console.log('Cancel clicked');\n        }\n      }]\n    });\n    await actionSheet.present();\n  }\n\n  async presentCloseCasePrompt() {\n    const alert = await this.alertController.create({\n      header: 'Enter remarks',\n      subHeader: 'Please enter notes/remark',\n      inputs: [\n        {\n          name: 'closeMessage',\n          type: 'text',\n          placeholder: 'Enter your notes'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Close',\n          handler: (event) => {\n            console.log(event, 'Confirm Ok');\n            this.CloseCaseConfirm(event.closeMessage);\n\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async CloseCaseConfirm(message) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: 'Please confirm you want to close case.',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Confirm',\n          handler: () => {\n            console.log('Confirm Okay');\n            this.messages.closeMessage = message;\n            this.messages.closeDate = new Date();\n            this.isClosed = true;\n            this.caseStatus = 'closed';\n            this.action.show = false;\n            this.presentToastWithOptions(`Case closed successfully.`);\n            this.setCaseData({\n              status: 'Closed',\n              statusColor: 'success',\n              callStatus: 'Closed',\n              callStatusColor: 'success',\n              lastAssignee: 'Paul Lieberman'\n            });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  // async presentAddNotePrompt() {\n  //   const alert = await this.alertController.create({\n  //     header: 'Enter remarks',\n  //     subHeader: 'Please enter notes/remark',\n  //     inputs: [\n  //       {\n  //         name: 'closeMessage',\n  //         type: 'text',\n  //         placeholder: 'Enter your notes'\n  //       },\n  //     ],\n  //     buttons: [\n  //       {\n  //         text: 'Cancel',\n  //         role: 'cancel',\n  //         cssClass: 'secondary',\n  //         handler: () => {\n  //           console.log('Confirm Cancel');\n  //         }\n  //       }, {\n  //         text: 'Add Note',\n  //         handler: (event) => {\n  //           this.messages.notes.push({message: event.closeMessage, date: new Date()});\n  //           this.presentToastWithOptions(`Note added successfully.`);\n  //         }\n  //       }\n  //     ]\n  //   });\n\n  //   await alert.present();\n  // }\n\n  // async presentForwardPrompt() {\n  //   const alert = await this.alertController.create({\n  //     header: 'Enter remarks',\n  //     subHeader: 'Please enter notes/remark',\n  //     inputs: [\n  //       {\n  //         name: 'forwardMessage',\n  //         type: 'text',\n  //         placeholder: 'Enter your notes'\n  //       },\n  //       {\n  //         name: 'forwardedTo',\n  //         type: 'text',\n  //         id: 'name2-id',\n  //         // value: 'Paul Lieberman',\n  //         placeholder: 'Send to'\n  //       },\n  //     ],\n  //     buttons: [\n  //       {\n  //         text: 'Cancel',\n  //         role: 'cancel',\n  //         cssClass: 'secondary',\n  //         handler: () => {\n  //           console.log('Confirm Cancel');\n  //         }\n  //       }, {\n  //         text: 'Forward',\n  //         handler: (event) => {\n  //           this.messages.forwardMessage = event.forwardMessage;\n  //           this.messages.forwardedTo = event.forwardedTo;\n  //           this.messages.forwardDate = new Date();\n  //           this.isForwarded = true;\n  //           console.log('Confirm Ok');\n  //         }\n  //       }\n  //     ]\n  //   });\n\n  //   await alert.present();\n  // }\n\n}\n"],"sourceRoot":""}