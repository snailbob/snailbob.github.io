{"version":3,"sources":["webpack:///./src/app/services/dashboard.service.ts","webpack:///./src/app/tab0/tab0.module.ts","webpack:///./src/app/tab0/tab0.page.html","webpack:///./src/app/tab0/tab0.page.scss","webpack:///./src/app/tab0/tab0.page.ts"],"names":[],"mappings":"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","file":"tab0-tab0-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { catchError, tap } from 'rxjs/operators';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  url = environment.baseUrl;\n  constructor(private http: HttpClient, private userService: UserService) { }\n  \n  userId() {\n    this.userService.getUserId();\n  }\n  userInfo() {\n    return this.userService.getUserInfo()\n  }\n  getDashboardInfo(params: any) {\n    return this.http.post(`${this.url}/report/average`, params)\n    .pipe(\n      tap(_ => this.userService.log('fetched DashboardInfo')),\n      catchError(this.userService.handleError('DashboardInfo', []))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab0Page } from './tab0.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab0Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [Tab0Page]\n})\nexport class Tab0PageModule {}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      <img alt=\\\"logo\\\" height=\\\"40\\\" src=\\\"assets/logo.png\\\">\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"cura-dashboard\\\">\\r\\n  <div class=\\\"ion-padding-start\\\">\\r\\n    <ion-text color=\\\"primary\\\">\\r\\n      <h4>Dashboard</h4>\\r\\n    </ion-text>\\r\\n  </div>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-list>\\r\\n      <ion-list-header>\\r\\n        <ion-label>Date range filter</ion-label>\\r\\n      </ion-list-header>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>Start Date</ion-label>\\r\\n        <ion-datetime display-format=\\\"MM/DD/YYYY\\\" [(ngModel)]=\\\"filter.from\\\" [max]=\\\"filter.to\\\" (ionChange)=\\\"getDashboardInfo()\\\" picker-format=\\\"MMMM DD YYYY\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-label>End Date</ion-label>\\r\\n        <ion-datetime display-format=\\\"MM/DD/YYYY\\\" [(ngModel)]=\\\"filter.to\\\" [min]=\\\"filter.from\\\" (ionChange)=\\\"getDashboardInfo()\\\" picker-format=\\\"MMMM DD YYYY\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card>\\r\\n  <div padding class=\\\"ion-text-center\\\" *ngIf=\\\"isLoading\\\">\\r\\n    <ion-spinner></ion-spinner>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"!isLoading\\\">\\r\\n\\r\\n    <ion-card color=\\\"primary\\\">\\r\\n      <ion-card-header class=\\\"number-header\\\">\\r\\n        <ion-card-title class=\\\"numbers-lg\\\">\\r\\n          <ion-badge color=\\\"dark\\\">{{dashData.closed}}</ion-badge>\\r\\n        </ion-card-title>\\r\\n        <ion-card-subtitle>Completed Closed Case &middot; {{filter.from | date: 'MMM d, y'}}-{{filter.to | date: 'MMM d, y'}}</ion-card-subtitle>\\r\\n      </ion-card-header>\\r\\n    </ion-card>\\r\\n  \\r\\n    <ion-card color=\\\"danger\\\">\\r\\n      <ion-card-header class=\\\"number-header\\\">\\r\\n        <ion-card-title class=\\\"numbers-lg\\\">\\r\\n          <ion-badge color=\\\"dark\\\">{{dashData.accepted}}</ion-badge>\\r\\n        </ion-card-title>\\r\\n        <ion-card-subtitle>Case Average Time Accepted &middot; {{filter.from | date: 'MMM d, y'}}-{{filter.to | date: 'MMM d, y'}}</ion-card-subtitle>\\r\\n      </ion-card-header>\\r\\n    </ion-card>\\r\\n  \\r\\n    <ion-card color=\\\"success\\\">\\r\\n      <ion-card-header class=\\\"number-header\\\">\\r\\n        <ion-card-title class=\\\"numbers-lg\\\">\\r\\n          <ion-badge color=\\\"dark\\\">{{dashData.read}}</ion-badge>\\r\\n        </ion-card-title>\\r\\n        <ion-card-subtitle>Case Average Time To Close &middot; {{filter.from | date: 'MMM d, y'}}-{{filter.to | date: 'MMM d, y'}}</ion-card-subtitle>\\r\\n      </ion-card-header>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\"","module.exports = \".cura-dashboard .number-header {\\n  text-align: center; }\\n  .cura-dashboard .number-header .numbers-lg {\\n    text-align: center; }\\n  .cura-dashboard .number-header .numbers-lg ion-badge {\\n      opacity: 0.8;\\n      width: 100%;\\n      font-weight: bold;\\n      font-size: 75px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMC9EOlxcV29ya1xcUGF1bFxcQ3VyYU1vYmlsZUF6dXJlXFxDdXJhY2FsbC1tb2JpbGUtYXBwL3NyY1xcYXBwXFx0YWIwXFx0YWIwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGtCQUFrQixFQUFBO0VBRjFCO0lBV1ksa0JBQWtCLEVBQUE7RUFYOUI7TUFNZ0IsWUFBWTtNQUNaLFdBQVc7TUFDWCxpQkFBaUI7TUFDakIsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdGFiMC90YWIwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXJhLWRhc2hib2FyZHtcbiAgICAubnVtYmVyLWhlYWRlcntcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgICAgIC5udW1iZXJzLWxnIHtcbiAgICAgICAgICAgIGlvbi1iYWRnZXtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA3NXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../services/dashboard.service';\nimport { CommonService } from '../services/common.service';\nimport { DatePipe } from '@angular/common'\n\nexport interface Filter {\n  from: string;\n  to: string;\n  id: number;\n}\nexport interface DashData {\n  from: string;\n  to: string;\n  id: number;\n}\n\n@Component({\n  selector: 'app-tab0',\n  templateUrl: './tab0.page.html',\n  styleUrls: ['./tab0.page.scss'],\n  providers: [DatePipe]\n})\nexport class Tab0Page implements OnInit {\n  filter: any = {\n    from: '',\n    to: '',  \n    user_id: 0\n  };\n  dashData: any = {\n    read: '',\n    accepted: '',\n    closed: '',\n  };\n  isLoading: boolean = false;\n  userInfo: any = {};\n\n  constructor(\n    public dashboardService: DashboardService,\n    public datepipe: DatePipe,\n    public commonService: CommonService,\n  ) { }\n\n  ngOnInit() {\n    this.userInfo = this.dashboardService.userInfo();\n    const date = new Date(), y = date.getFullYear(), m = date.getMonth();\n    const firstDay = new Date(y, m, 1);\n    const lastDay = new Date(y, m + 1, 0)\n\n    this.filter.from = this.datepipe.transform(firstDay, 'yyyy-MM-dd');\n    this.filter.to = this.datepipe.transform(lastDay, 'yyyy-MM-dd');\n    this.filter.user_id = this.userInfo.id;\n  }\n  \n  ionViewWillEnter() {\n    this.getDashboardInfo();\n  }\n\n  getDashboardInfo() {\n    this.isLoading = true;\n    this.dashboardService.getDashboardInfo(this.filter)\n    .subscribe((res: any) => {\n      this.isLoading = false;\n      this.dashData = res;\n      console.log(res , this.dashData, 'res');\n    });\n\n  }\n}\n"],"sourceRoot":""}