{"version":3,"file":"static/js/186.4ed64aa4.chunk.js","mappings":"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","sources":["components/projects/ProjectSingle.jsx","components/projects/ProjectsFilter.jsx","components/projects/ProjectsGrid.jsx","data/projects.js","context/ProjectsContext.jsx","pages/Projects.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst ProjectSingle = ({ title, category, image }) => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, delay: 1 }}\r\n      transition={{\r\n        ease: \"easeInOut\",\r\n        duration: 0.7,\r\n        delay: 0.15,\r\n      }}\r\n    >\r\n      <div aria-label=\"Single Project\">\r\n        <div className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\">\r\n          <div>\r\n            <img\r\n              src={image}\r\n              className=\"rounded-t-xl border-none\"\r\n              alt=\"Single Project\"\r\n            />\r\n          </div>\r\n          <div className=\"text-center px-4 py-6\">\r\n            <p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\r\n              {title}\r\n            </p>\r\n            <span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\r\n              {category}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ProjectSingle;\r\n","const selectOptions = [\r\n  \"Web Application\",\r\n  \"Mobile Application\",\r\n  //   \"UI/UX Design\",\r\n  //   \"Branding\",\r\n];\r\n\r\nconst ProjectsFilter = ({ setSelectProject }) => {\r\n  return (\r\n    <select\r\n      onChange={(e) => {\r\n        setSelectProject(e.target.value);\r\n      }}\r\n      className=\"font-general-medium \r\n                px-4\r\n                sm:px-6\r\n                py-2\r\n                border\r\n                dark:border-secondary-dark\r\n                rounded-lg\r\n                text-sm\r\n                sm:text-md\r\n                dark:font-medium\r\n                bg-secondary-light\r\n                dark:bg-ternary-dark\r\n                text-primary-dark\r\n                dark:text-ternary-light\r\n            \"\r\n    >\r\n      <option value={setSelectProject} className=\"text-sm sm:text-md\">\r\n        All Projects\r\n      </option>\r\n\r\n      {selectOptions.map((option) => (\r\n        <option className=\"text-normal sm:text-md\" key={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default ProjectsFilter;\r\n","import { useContext } from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport ProjectSingle from \"./ProjectSingle\";\r\nimport { ProjectsContext } from \"../../context/ProjectsContext\";\r\nimport ProjectsFilter from \"./ProjectsFilter\";\r\n\r\nconst ProjectsGrid = () => {\r\n  const {\r\n    projects,\r\n    searchProject,\r\n    setSearchProject,\r\n    searchProjectsByTitle,\r\n    selectProject,\r\n    setSelectProject,\r\n    selectProjectsByCategory,\r\n  } = useContext(ProjectsContext);\r\n\r\n  return (\r\n    <section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\r\n      <div className=\"text-center\">\r\n        <p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\r\n          Projects portfolio\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-10 sm:mt-16\">\r\n        <h3\r\n          className=\"font-general-regular \r\n                        text-center text-secondary-dark\r\n                        dark:text-ternary-light\r\n                        text-md\r\n                        sm:text-xl\r\n                        mb-3\r\n                        \"\r\n        >\r\n          Search projects by title or filter by category\r\n        </h3>\r\n        <div\r\n          className=\"\r\n                        flex\r\n                        justify-between\r\n                        border-b border-primary-light\r\n                        dark:border-secondary-dark\r\n                        pb-3\r\n                        gap-3\r\n                        \"\r\n        >\r\n          <div className=\"flex justify-between gap-2\">\r\n            <span\r\n              className=\"\r\n                                hidden\r\n                                sm:block\r\n                                bg-primary-light\r\n                                dark:bg-ternary-dark\r\n                                p-2.5\r\n                                shadow-sm\r\n                                rounded-xl\r\n                                cursor-pointer\r\n                                \"\r\n            >\r\n              <FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\r\n            </span>\r\n            <input\r\n              onChange={(e) => {\r\n                setSearchProject(e.target.value);\r\n              }}\r\n              className=\"font-general-medium \r\n                                pl-3\r\n                                pr-1\r\n                                sm:px-4\r\n                                py-2\r\n                                border \r\n                            border-gray-200\r\n                                dark:border-secondary-dark\r\n                                rounded-lg\r\n                                text-sm\r\n                                sm:text-md\r\n                                bg-secondary-light\r\n                                dark:bg-ternary-dark\r\n                                text-primary-dark\r\n                                dark:text-ternary-light\r\n                                \"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"search\"\r\n              required=\"\"\r\n              placeholder=\"Search Projects\"\r\n              aria-label=\"Name\"\r\n            />\r\n          </div>\r\n\r\n          <ProjectsFilter setSelectProject={setSelectProject} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\">\r\n        {selectProject\r\n          ? selectProjectsByCategory.map((project) => (\r\n              <ProjectSingle\r\n                title={project.title}\r\n                category={project.category}\r\n                image={project.img}\r\n                key={project.id}\r\n              />\r\n            ))\r\n          : searchProject\r\n          ? searchProjectsByTitle.map((project) => (\r\n              <ProjectSingle\r\n                title={project.title}\r\n                category={project.category}\r\n                image={project.img}\r\n                key={project.id}\r\n              />\r\n            ))\r\n          : projects.map((project) => (\r\n              <ProjectSingle\r\n                title={project.title}\r\n                category={project.category}\r\n                image={project.img}\r\n                key={project.id}\r\n              />\r\n            ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectsGrid;\r\n","// Import images\r\nimport Project1 from \"../images/projects/project1v.png\";\r\nimport Project2 from \"../images/projects/project2v2.png\";\r\nimport Project3 from \"../images/projects/project3v.png\";\r\nimport Project4 from \"../images/projects/project4v.png\";\r\nimport Project5 from \"../images/projects/project5v.png\";\r\nimport Project6 from \"../images/projects/project6v.png\";\r\nimport Project7 from \"../images/projects/project7v.png\";\r\nimport Project8 from \"../images/projects/project8v.png\";\r\nimport Project9 from \"../images/projects/project9v.png\";\r\nimport projectWebwing from \"../images/projects/projectWebwing.png\";\r\nimport projectTechlegal from \"../images/projects/projectTechlegal.png\";\r\nimport projectMedicalRisk from \"../images/projects/projectMedicalRisk.png\";\r\nimport projectLuxuryInsurance from \"../images/projects/projectLuxuryInsurance.png\";\r\nimport projectSkedgy from \"../images/projects/projectSkedgy.png\";\r\nimport projectTrivver from \"../images/projects/projectTrivver.png\";\r\nimport projectBetterBlaster from \"../images/projects/projectBetterBlaster.png\";\r\nimport projectServingSpoon from \"../images/projects/projectServingSpoon.png\";\r\n\r\nexport const projectsData = [\r\n  {\r\n    id: 1,\r\n    title: \"Spacelli\",\r\n    category: \"Web Application\",\r\n    img: Project1,\r\n    ProjectHeader: {\r\n      title: \"Project Management UI - From Context\",\r\n      publishDate: \"Jul 26, 2021\",\r\n      tags: \"UI / Frontend\",\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Nesting\",\r\n    category: \"Mobile Application\",\r\n    img: Project2,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"CrisisFlo\",\r\n    category: \"Web Application\",\r\n    img: Project3,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Ebinder\",\r\n    category: \"Web Application\",\r\n    img: Project4,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Tech Stack Recruiter\",\r\n    category: \"Web Application\",\r\n    img: Project8,\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"CuraCall\",\r\n    category: \"Mobile Application\",\r\n    img: Project9,\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    title: \"Risk Adviser Match\",\r\n    category: \"Web Application\",\r\n    img: Project7,\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    title: \"RedSky Cargo\",\r\n    category: \"Web Application\",\r\n    img: Project5,\r\n  },\r\n\r\n  {\r\n    id: 9,\r\n    title: \"Strata Demo\",\r\n    category: \"Web Application\",\r\n    img: Project6,\r\n  },\r\n  {\r\n    id: 10,\r\n    title: \"Webwing\",\r\n    category: \"Web Application\",\r\n    img: projectWebwing,\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"Techlegal\",\r\n    category: \"Web Application\",\r\n    img: projectTechlegal,\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"Medical Risk Solutions\",\r\n    category: \"Web Application\",\r\n    img: projectMedicalRisk,\r\n  },\r\n  {\r\n    id: 12,\r\n    title: \"Luxury Insurance\",\r\n    category: \"Web Application\",\r\n    img: projectLuxuryInsurance,\r\n  },\r\n  {\r\n    id: 13,\r\n    title: \"Skedgy\",\r\n    category: \"Web Application\",\r\n    img: projectSkedgy,\r\n  },\r\n  {\r\n    id: 14,\r\n    title: \"Trivver\",\r\n    category: \"Web Application\",\r\n    img: projectTrivver,\r\n  },\r\n  {\r\n    id: 15,\r\n    title: \"Better Blaster\",\r\n    category: \"Web Application\",\r\n    img: projectBetterBlaster,\r\n  },\r\n  {\r\n    id: 16,\r\n    title: \"The Serving Spoon\",\r\n    category: \"Web Application\",\r\n    img: projectServingSpoon,\r\n  },\r\n];\r\n","import { useState, createContext, useEffect } from \"react\";\r\nimport { projectsData } from \"../data/projects\";\r\n\r\n// Create projects context\r\nexport const ProjectsContext = createContext();\r\n\r\n// Create the projects context provider\r\nexport const ProjectsProvider = (props) => {\r\n  const [projects, setProjects] = useState(projectsData);\r\n  const [searchProject, setSearchProject] = useState(\"\");\r\n  const [selectProject, setSelectProject] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.limit) {\r\n      setProjects((data) => data.slice(0, props.limit));\r\n    }\r\n  }, [props.limit]);\r\n\r\n  // Search projects by project title\r\n  const searchProjectsByTitle = projects.filter((item) => {\r\n    const result = item.title\r\n      .toLowerCase()\r\n      .includes(searchProject.toLowerCase())\r\n      ? item\r\n      : searchProject === \"\"\r\n      ? item\r\n      : \"\";\r\n    return result;\r\n  });\r\n\r\n  // Select projects by project category\r\n  const selectProjectsByCategory = projects.filter((item) => {\r\n    let category =\r\n      item.category.charAt(0).toUpperCase() + item.category.slice(1);\r\n    return category.includes(selectProject);\r\n  });\r\n\r\n  return (\r\n    <ProjectsContext.Provider\r\n      value={{\r\n        projects,\r\n        setProjects,\r\n        searchProject,\r\n        setSearchProject,\r\n        searchProjectsByTitle,\r\n        selectProject,\r\n        setSelectProject,\r\n        selectProjectsByCategory,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n","import ProjectsGrid from '../components/projects/ProjectsGrid';\r\nimport { ProjectsProvider } from '../context/ProjectsContext';\r\n\r\nconst Projects = () => {\r\n\treturn (\r\n\t\t<ProjectsProvider>\r\n\t\t\t<div className=\"container mx-auto\">\r\n\t\t\t\t<ProjectsGrid />\r\n\t\t\t</div>\r\n\t\t</ProjectsProvider>\r\n\t);\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["_ref","title","category","image","_jsx","motion","div","initial","opacity","animate","delay","transition","ease","duration","children","_jsxs","className","src","alt","selectOptions","setSelectProject","onChange","e","target","value","map","option","ProjectsGrid","projects","searchProject","setSearchProject","searchProjectsByTitle","selectProject","selectProjectsByCategory","useContext","ProjectsContext","FiSearch","id","name","type","required","placeholder","ProjectsFilter","project","ProjectSingle","img","projectsData","Project1","ProjectHeader","publishDate","tags","Project2","Project3","Project4","Project7","Project5","Project6","createContext","ProjectsProvider","props","setProjects","useState","useEffect","limit","data","slice","filter","item","toLowerCase","includes","charAt","toUpperCase","Provider","Projects"],"sourceRoot":""}