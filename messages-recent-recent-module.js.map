{"version":3,"sources":["webpack:///./src/app/messages/recent/recent.module.ts","webpack:///./src/app/messages/recent/recent.page.html","webpack:///./src/app/messages/recent/recent.page.scss","webpack:///./src/app/messages/recent/recent.page.ts"],"names":[],"mappings":"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","file":"messages-recent-recent-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RecentPage } from './recent.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RecentPage]\r\n})\r\nexport class RecentPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      <img alt=\\\"logo\\\" height=\\\"40\\\" src=\\\"assets/logo.png\\\">\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"selectedCount\\\">\\r\\n      <ion-button color=\\\"primary\\\" (click)=\\\"initiateMessage()\\\">\\r\\n        <ion-icon name=\\\"paper-plane\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <ion-toolbar>\\r\\n    <ion-searchbar [(ngModel)]=\\\"searchText\\\" (ngModelChange)=\\\"searchContacts()\\\" placeholder=\\\"Search contact\\\"></ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-list *ngIf=\\\"!searchText\\\">\\r\\n    <ion-list-header>\\r\\n      <ion-label>Recent</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngFor=\\\"let contact of recentContacts\\\" routerLink=\\\"/tabs/tab2/messages/conversation/{{contact.room_id}}\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img [src]=\\\"contact.avatar\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>{{contact.full_name}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-list *ngIf=\\\"contacts.length && !isLoading\\\">\\r\\n    <ion-list-header>\\r\\n      <ion-label>Contacts</ion-label>\\r\\n    </ion-list-header>\\r\\n    <ion-item *ngFor=\\\"let contact of contacts\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img [src]=\\\"contact.avatar\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>{{contact.full_name}}</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" (ngModelChange)=\\\"onSelect(contact)\\\" [(ngModel)]=\\\"contact.isChecked\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <div padding class=\\\"ion-text-center\\\" *ngIf=\\\"isLoading\\\">\\r\\n    <ion-spinner></ion-spinner>\\r\\n  </div>\\r\\n  <p padding class=\\\"ion-text-center\\\" *ngIf=\\\"!isLoading && !contacts.length\\\">\\r\\n    no contacts\\r\\n  </p>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL3JlY2VudC9yZWNlbnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AlertController, ActionSheetController } from '@ionic/angular';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-recent',\r\n  templateUrl: './recent.page.html',\r\n  styleUrls: ['./recent.page.scss'],\r\n})\r\nexport class RecentPage implements OnInit {\r\n  recentContacts: any = [];\r\n  contacts: any = [];\r\n  userInfo: any = {};\r\n  selectedCount: number = 0;\r\n  searchText: string = '';\r\n  isLoading: boolean = false;\r\n  modelChanged: Subject<string> = new Subject<string>();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public userService: UserService,\r\n    public actionSheetController: ActionSheetController,\r\n    public alertController: AlertController,\r\n    public commonService: CommonService,\r\n    public toastController: ToastController,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modelChanged\r\n    .pipe(\r\n      debounceTime(300), distinctUntilChanged())\r\n      .subscribe((model: any) => this.searchText = model);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRecentContacts();\r\n    this.searchContacts();\r\n    this.userInfo = this.userService.getUserInfo();\r\n\r\n  }\r\n\r\n  getRecentContacts() {\r\n    this.messageService.getRecentContacts({})\r\n    .subscribe((res: any) => {\r\n      console.log(res);\r\n      this.recentContacts = res.contacts;\r\n    });\r\n  }\r\n\r\n  onSelect(contact: any) {\r\n    this.selectedCount = !contact.isChecked ? this.selectedCount + 1 : this.selectedCount - 1;\r\n    console.log(contact);\r\n  }\r\n  \r\n  initiateMessage(){\r\n    const selected = this.contacts.filter((item: any) => item.isChecked);\r\n    if (selected.length === 1) {\r\n      this.router.navigate([`/tabs/tab2/messages/conversation/${selected[0].room_id}`]);\r\n    } else {\r\n      this.commonService.presentLoading();\r\n      let roomName = this.userInfo.id+'-'; \r\n      selected.map((item: any, index: number)=> {\r\n        roomName += ((index+1 === selected.length)) ? item.id : item.id+'-';\r\n      });\r\n\r\n      const param = {\r\n        name: roomName,\r\n        participants_no: selected.length,\r\n        status: 'active',\r\n        user_id: this.userInfo.id\r\n      };\r\n\r\n      this.messageService.createRoom(param)\r\n      .subscribe((room: any) => {\r\n        this.commonService.loadingBox.dismiss();\r\n        this.router.navigate([`/tabs/tab2/messages/conversation/${room.id}`]);\r\n      });\r\n      console.log(roomName);\r\n    }\r\n  }\r\n\r\n  searchContacts() {\r\n    this.isLoading = true;\r\n    this.selectedCount = 0;\r\n\r\n    console.log(this.searchText);\r\n    this.userService.getUsers({searchText: this.searchText})\r\n    .subscribe(\r\n      (res:any) => {\r\n        this.isLoading = false;\r\n        console.log(res);\r\n        this.contacts = res;\r\n      }\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}